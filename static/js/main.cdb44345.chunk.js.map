{"version":3,"sources":["imgs/goggles.png","api/unsplash.js","components/Clock/Clock.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/ImageList/ImageCard.js","components/ImageList/ImageList.js","components/Tabs/Tabs.js","WeatherDisplay.js","Loading.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","create","baseURL","headers","Authorization","Clock","state","date","time","_this2","this","setState","Date","toLocaleDateString","setInterval","toLocaleTimeString","react_default","a","createElement","Fragment","className","React","Component","seasonConfig","summer","heading","text","iconName","spring","autumn","winter","Header","lat","month","season","props","getMonth","_seasonConfig$season","concat","src","goggles","alt","style","gogglesH1","components_Clock_Clock","marginTop","marginBottom","SearchBar","term","onFormSubmit","event","preventDefault","console","log","_this","onSubmit","type","value","placeholder","onChange","target","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","gridRowEnd","regular","ref","ImageList","pics","images","map","ImageList_ImageCard","key","id","Tabs","href","WeatherDisplay","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","components_Header_Header","components_SearchBar_SearchBar","length","components_Tabs_Tabs","components_ImageList_ImageList","Loading","message","defaultProps","App","long","errorMessage","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","src_WeatherDisplay_0","src_Loading","renderContent","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.cdb44345.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goggles.b198ce63.png\";","import axios from 'axios'\n\n// the create method creates an instance of the the axios client \n// with a couple of defaulted properties\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID a8218ab1f7e09b390fb12924019888752022939eb3a84d31105d61594b850e6a'\n    }\n});","import './Clock.css'\nimport React from 'react'\n\nclass Clock extends React.Component{\n    state = {\n        date: \"\",\n        time: \"\"\n    }\n\n    componentDidMount(){\n        this.setState({date: new Date().toLocaleDateString()})\n        setInterval(()=>{\n            this.setState({time: new Date().toLocaleTimeString()})\n        }, 1000)\n    }\n\n    componentDidUpdate(){}\n\n    render(){\n        return(\n            <React.Fragment>\n                <div className=\"time-display\">\n                <i className=\"calendar alternate icon\"></i> {this.state.date},  <i className=\"clock outline icon\"></i> {this.state.time} .\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Clock","import React from 'react'\nimport Clock from '../Clock/Clock'\nimport goggles from '../../imgs/goggles.png'\n\n\nconst seasonConfig = {\n    summer: {\n        heading: 'It is Summer in your current location.',\n        text: 'Let\\'s hit the beach!',\n        iconName: 'sun'\n    },\n    spring: {\n        heading:'It\\'s Spring in your current location!',\n        text: 'Let\\'s get a drink by the park',\n        iconName: 'bug'\n    },\n    autumn: {\n        heading:'It\\'s Autumn in your current location!',\n        text: 'The tree leaves are beautiful',\n        iconName: 'cloud'\n    },\n    winter: {\n        heading: 'It is Winter in your current location',\n        text: 'Brr, it\\'s cold!',\n        iconName: 'snowflake'\n    }\n}\n\nconst getSeason = (lat, month) => {\n    if (month > 3 && month < 5){\n        return lat > 0 ? 'spring' : 'autumn';\n    } else if (month > 6 && month < 8){\n        return lat > 0 ? 'summer' : 'winter';\n    } else if (month > 9 && month < 11){\n        return lat > 0 ? 'autumn' : 'spring';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n}\n\nclass Header extends React.Component{\n\n    render(){\n\n        const season = getSeason(this.props.lat, new Date().getMonth());\n        const {heading, text, iconName} = seasonConfig[season] // returns object with heading, text and iconName\n\n        return(\n            <React.Fragment>\n                <div className={`weather-display ${season}`}>\n                    <i className={`icon-left massive ${iconName} icon`} />\n                    <div className=\"row\">\n                        <img src={goggles} alt=\"logo\"/>\n                    </div>\n                    <div className=\"row\">\n                        <h1 style={gogglesH1}>Goggles</h1>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"info\">\n                            <h4>{heading}</h4>\n                            <div className=\"row\">\n                                <Clock />\n                                <p>{text}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <i className={`icon-right big ${iconName} icon`} />\n            </div>\n        </React.Fragment>\n        );\n    }\n        \n}\n\nconst gogglesH1 = {\n    marginTop: '-90px',\n    marginBottom: '80px',\n\n}\nexport default Header","import './SearchBar.css'\nimport React, {Component} from 'react';\n\nclass SearchBar extends Component{\n\n    state = { term: '' };\n\n    onFormSubmit = (event) =>{\n        event.preventDefault();\n        console.log(this.state.term);\n        this.props.onSubmit(this.state.term);\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n                    <div className=\"ui fluid icon input\">\n                        <input type=\"text\" value={this.state.term} placeholder=\"Search...\" onChange={ event => this.setState({ term: event.target.value}) } />\n                        <i className=\"search icon\"></i>\n                    </div>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react'\n\nclass ImageCard extends React.Component{\n\n    constructor(props){\n        super(props)\n        \n        this.state = { spans: 0 }\n\n        this.imageRef = React.createRef()\n        \n    }\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans); //this is to avoid returning zero px height\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n\n        this.setState({ spans })\n    }\n\n    render(){\n        const { description, urls } = this.props.image;\n\n        return(\n                <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                    <img alt={description} \n                        src={urls.regular}\n                        ref={this.imageRef} />\n                </div>\n        )\n    }\n}\n\nexport default ImageCard;","import React from 'react'\nimport ImageCard from './ImageCard'\nimport './imageList.css'\n\nconst ImageList = (props) =>{\n    const pics = props.images.map((image)=>{\n        return(\n            <ImageCard key={image.id} image={image}/>\n        );\n    })\n    \n    return  <div className=\"image-list\">{pics}</div>\n\n}\n\nexport default ImageList","import React from 'react'\n\nclass Tabs extends React.Component{\n    render(){\n        return(\n            <div className=\"ui grid\">\n            <div className=\"column\">\n                <div id=\"tabs\" className=\"ui secondary pointing menu\">\n                    <div className=\"active item\" href=\"\">Images</div>\n                    <a className=\"item\" href=\"\">Video</a>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Tabs","import React from 'react';\nimport './WeatherDisplay.css';\nimport unsplash from './api/unsplash'\nimport Header from './components/Header/Header'\nimport SearchBar from './components/SearchBar/SearchBar'\nimport ImageList from './components/ImageList/ImageList'\nimport Tabs from './components/Tabs/Tabs'\n\n\nclass WeatherDisplay extends React.Component{\n    state = { images: [] };\n\n    onSearchSubmit = async (term) => {\n        const response = await unsplash.get('/search/photos', {\n                params: { query: term },\n            })\n\n        // console.log(this);\n        this.setState({images: response.data.results})\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                <Header/>\n                <div className=\"ui container\" style={{ marginTop: '10px'}}>\n                    <SearchBar onSubmit={this.onSearchSubmit}/>\n                    Found: {this.state.images.length} images\n                </div>\n                <Tabs/>\n                <ImageList images={this.state.images}/>      \n            </React.Fragment>\n        );\n    }  \n}\n\nexport default WeatherDisplay","import React from 'react'\n\nconst Loading = (props) => {\n    return (\n            <div className=\"ui active dimmer\">\n                <div className=\"ui large text loader\">\n                    {props.message} \n                </div>\n            </div>\n    )\n}\n\nLoading.defaultProps ={\n    message: 'Loading...'\n}\n\nexport default Loading;","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport WeatherDisplay from './WeatherDisplay';\nimport Loading from './Loading'\n\n class App extends Component {\n\n    state = { \n        lat: null, \n        long: null,\n        errorMessage: ''\n     };\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(\n            (position) =>  this.setState({lat: position.coords.latitude, long: position.coords.longitude}),\n            (error) => this.setState({ errorMessage: error.message }))\n        console.log('App component was rendered to the screen')\n    }\n\n    componentDidUpdate(){\n        console.log('App component was just updated - it rendered!')\n    }\n\n\n    renderContent(){\n        if (this.state.errorMessage && !this.state.lat && !this.state.long){\n            return <div>Error message: {this.state.errorMessage}</div>;\n         }\n         if (!this.state.errorMessage && this.state.lat && this.state.long){\n            return (\n                <WeatherDisplay lat={this.state.lat} long={this.state.long} />)\n         }\n         return <Loading message=\"Please accept location request\"/>\n     }\n\n     render() {\n        return(\n            <div className=\"border red\">\n               {this.renderContent()}\n            </div>\n        )\n     \n    };\n\n    }\n    \n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}